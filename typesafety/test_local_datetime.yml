- case: strict_equality
  regex: true
  main: |
    from whenever import LocalDateTime
    d = LocalDateTime(2020, 8, 9)
    d == 3  # E: .*comparison.*
- case: addition
  regex: true
  main: |
    from datetime import timedelta
    from whenever import LocalDateTime
    d = LocalDateTime(2020, 8, 9)
    reveal_type(d + timedelta(4))  # N: .*whenever.LocalDateTime
    d + 12  # E: .*Unsupported
- case: subtraction
  regex: true
  main: |
    from datetime import timedelta
    from whenever import LocalDateTime
    d = LocalDateTime(2020, 8, 9)
    reveal_type(d - timedelta(4))  # N: .*type is "whenever.LocalDateTime"
    reveal_type(d - d)  # N: .*type is "datetime.timedelta
- case: replace
  regex: true
  main: |
    from whenever import LocalDateTime
    d = LocalDateTime(2020, 8, 9)
    d.replace(tzinfo=None)  # E: .*Unexpected keyword.*tzinfo.*
    d.replace(fold=1)  # E: .*fold.*
    d.replace(year=None)  # E: .*None.*
